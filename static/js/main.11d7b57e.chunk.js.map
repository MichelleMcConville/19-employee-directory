{"version":3,"sources":["components/Header/Header.js","util/API.js","components/Search/Search.js","components/Table/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","id","API","getEmployees","axios","get","Search","onChange","handleInputChange","value","search","name","type","placeholder","Table","state","employeeDB","filteredPeepsDB","event","target","searchTerm","toLowerCase","setState","sortByFName","sortedEmployees","sort","a","b","first","reverse","sortByLName","last","sortByLocation","location","city","then","res","data","results","console","log","catch","err","this","onClick","map","item","includes","src","picture","thumbnail","alt","phone","DateFormat","dob","date","login","uuid","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11d7b57e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"header jumbotron-fluid\" id=\"header\">\r\n        <div className=\"container\">\r\n          <h1><span className=\"text\">Employee Directory</span></h1>\r\n          <p id=\"hp\">Click on arrows to filter by heading - OR - search by First and Last Name</p>\r\n        </div>\r\n      </div>\r\n      <hr></hr>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nconst API = {\r\n  getEmployees: function () {\r\n    return axios.get(\"https://randomuser.me/api/?results=50&nat=us\");\r\n  },\r\n};\r\n\r\nexport default API;\r\n","import React from \"react\";\r\nimport \"./Search.css\";\r\n\r\nfunction Search(props) {\r\n  return (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <div className=\"input-group\">\r\n          <input \r\n            onChange={props.handleInputChange} \r\n            value={props.search} \r\n            name=\"search\" \r\n            type=\"text\" \r\n            className=\"form-control\" \r\n            placeholder=\"Search here\" \r\n            id=\"search\" />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport API from \"../../util/API.js\"\r\nimport Search from \"../Search/Search\";\r\nimport \"./Table.css\";\r\n\r\n//npm package to reformat DOB\r\nimport DateFormat from \"dateformat\";\r\n\r\nclass Table extends React.Component {\r\n  state = {\r\n    employeeDB: [],\r\n    filteredPeepsDB: \"\",\r\n    search: \"\",\r\n  };\r\n\r\n  //Api call for randomuser.me\r\n  componentDidMount() {\r\n    API.getEmployees()\r\n      .then((res) => {\r\n        this.setState({ employeeDB: res.data.results });\r\n        console.log(this.state.employeeDB);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  //Handle input in search bar\r\n  handleInputChange = (event) => {\r\n    if (event.target.name === \"search\") {\r\n      const searchTerm = event.target.value.toLowerCase();\r\n      this.setState({\r\n        search: searchTerm,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Sort by first name\r\n  sortByFName = () => {\r\n    const sortedEmployees = this.state.employeeDB.sort((a, b) => {\r\n      if (b.name.first > a.name.first) { return -1; }\r\n      if (a.name.first > b.name.first) { return 1; }\r\n      return 0;\r\n    });\r\n\r\n    if (this.state.filteredPeepsDB === \"DESC\") {\r\n      sortedEmployees.reverse();\r\n      this.setState({ filteredPeepsDB: \"ASC\" });\r\n    } else {\r\n      this.setState({ filteredPeepsDB: \"DESC\" });\r\n    }\r\n    this.setState({ employeeDB: sortedEmployees });\r\n  };\r\n\r\n  //Sort by last name\r\n  sortByLName = () => {\r\n    const sortedEmployees = this.state.employeeDB.sort((a, b) => {\r\n      if (b.name.last > a.name.last) { return -1; }\r\n      if (a.name.last > b.name.last) { return 1; }\r\n      return 0;\r\n    });\r\n    if (this.state.filteredPeepsDB === \"DESC\") {\r\n      sortedEmployees.reverse();\r\n      this.setState({ filteredPeepsDB: \"ASC\" });\r\n    } else {\r\n      this.setState({ filteredPeepsDB: \"DESC\" });\r\n    }\r\n    this.setState({ employeeDB: sortedEmployees });\r\n  };\r\n\r\n  //Sort by location\r\n  sortByLocation = () => {\r\n    const sortedEmployees = this.state.employeeDB.sort((a, b) => {\r\n      if (b.location.city > a.location.city) { return -1; }\r\n      if (a.location.city > b.location.city) { return 1; }\r\n      return 0;\r\n    });\r\n    if (this.state.filteredPeepsDB === \"DESC\") {\r\n      sortedEmployees.reverse();\r\n      this.setState({ filteredPeepsDB: \"ASC\" });\r\n    } else {\r\n      this.setState({ filteredPeepsDB: \"DESC\" });\r\n    }\r\n    this.setState({ employeeDB: sortedEmployees });\r\n  };\r\n\r\n  //Render items\r\n  render() {\r\n    // {props.peeps.length > 0 ? props.peeps.map(props => { \r\n    return (\r\n      <div className=\"container\">\r\n        <Search handleInputChange={this.handleInputChange} search={this.state.search} />\r\n\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-striped table-responsive table-hover\">\r\n            <thead className=\"table-head\">\r\n              <tr>\r\n                <th>Image</th>\r\n                <th>First Name <span className=\"downArrow\" onClick={this.sortByFName}></span></th>\r\n                <th>Last Name <span className=\"downArrow\" onClick={this.sortByLName}></span></th>\r\n                <th>Location <span className=\"downArrow\" onClick={this.sortByLocation}></span></th>\r\n                <th>Phone</th>\r\n                <th>DOB </th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {\r\n              //First Name sort\r\n              this.state.employeeDB && this.state.employeeDB.map((item) =>\r\n                item.name.first.toLowerCase().includes(this.state.search) ? (\r\n                  <tbody key={item.login.uuid}>\r\n                    <tr>\r\n                      <td><img src={item.picture.thumbnail} alt=\"thumbnail\" /></td>\r\n                      <td>{item.name.first}</td>\r\n                      <td>{item.name.last}</td>\r\n                      <td>{item.location.city}</td>\r\n                      <td>{item.phone}</td>\r\n                      <td>{DateFormat(item.dob.date, \"mediumDate\")}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ) : //Last Name sort\r\n                item.name.last.toLowerCase().includes(this.state.search) ? (\r\n                  <tbody key={item.login.uuid}>\r\n                    <tr>\r\n                      <td><img src={item.picture.thumbnail} className=\"rounded-circle\" alt=\"thumbnail\" /></td>\r\n                      <td>{item.name.first}</td>\r\n                      <td>{item.name.last}</td>\r\n                      <td>{item.location.city}</td>\r\n                      <td>{item.phone}</td>\r\n                      <td>{DateFormat(item.dob.date, \"mediumDate\")}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ) : null\r\n              )\r\n            }\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport Jumbotron from \"./components/Header/Header\";\r\nimport Table from \"./components/Table/Table\";\r\n// import Footer from \"./components/Footer/Footer\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Jumbotron />\r\n      <Table />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}